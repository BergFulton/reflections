How did viewing a diff between two versions of a file help you see the bug that was introduced?

It provided a side by side comparison and extracted out all of the code that hadn't changed between
versions. 

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
It could help you find inefficiencies in your code, or figure out what changes made the 
project go sideways. 

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?
If you forget to push or accidentally close the window, you could lose a lot of hard work. Docs saves all that for you. The pro is that, when done correctly, you can track small changes and then use them to diagnose issues later. 


Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
Google Docs is designed for a variety of uses that stand alone, not files that are dependent on each other for functionality. 

How can you use the commands git log and git diff to view the history of files?
Git log will give you a long summary of the changes, where as git diff will point out the specific changes made
in a line-by-line comparison. 

How might using version control make you more confident to make changes that could break something?
It gives you the knowledge that there's always a safety net and always an undo button. 

Now that you have your workspace set up, what do you want to try using Git for?
I think it could be interesting to use git to track writing projects. 